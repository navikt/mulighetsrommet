name: Build and deploy mulighetsrommet-api
on:
  push:
    branches: [dev]

env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE: ghcr.io/navikt/mulighetsrommet
  IMAGE_LABEL: dev
  CI: true
  TZ: Europe/Amsterdam

jobs:
  change-check:
    name: Check changes
    runs-on: ubuntu-latest
    outputs:
      changed-api: ${{ steps.changed-api.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 100
      - name: mulighetsrommet-api
        uses: marceloprado/has-changed-path@v1
        id: changed-api
        with:
          paths: mulighetsrommet-api

  build-docker-image-api:
    name: Build Docker image (mulighetsrommet-api)
    runs-on: ubuntu-latest
    needs: change-check
    if: needs.change-check.outputs.changed-api == 'true'
    defaults:
      run:
        working-directory: mulighetsrommet-api
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: gradle
      - name: Set up test environment
        run: docker-compose up -d
      - name: Build with Gradle
        run: ./gradlew build -x test
      - name: Publish test report
        uses: ScaCap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "**/build/test-results/test/TEST-*.xml"
      - name: Build and push Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
          echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${{github.actor}} --password-stdin
          docker build -t ${IMAGE}/mulighetsrommet-api-${IMAGE_LABEL}:${IMAGE_TAG} .
          docker push ${IMAGE}/mulighetsrommet-api-${IMAGE_LABEL}:${IMAGE_TAG}

  deploy-api:
    name: Deploy Docker image (mulighetsrommet-api)
    runs-on: ubuntu-latest
    needs: build-docker-image-api

    defaults:
      run:
        working-directory: mulighetsrommet-api
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: mulighetsrommet-api/.nais/nais.yaml
          VAR: image_tag=${{env.IMAGE_TAG}},image_label=${{env.IMAGE_LABEL}}
      - name: Create release tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/dev@${{ env.IMAGE_TAG }}
          release_name: Release to dev
          prerelease: true
