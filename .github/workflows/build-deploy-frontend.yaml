name: Build and deploy frontend
on:
  push:
    branches:
      - dev

env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE: ghcr.io/navikt/mulighetsrommet
  IMAGE_LABEL_LABS: labs
  IMAGE_LABEL_DEV: dev
  CI: true
  TZ: Europe/Amsterdam

jobs:
  change-check:
    name: Check changes
    runs-on: ubuntu-latest
    outputs:
      changed-fe: ${{ steps.changed-fe.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - name: Frontend
        uses: marceloprado/has-changed-path@v1
        id: changed-fe
        with:
          paths: frontend

#deploy-dev
  build-docker-image-frontend-dev:
    name: Build Docker image (dev)
    runs-on: ubuntu-latest
    needs: change-check
    if:
      needs.change-check.outputs.changed-fe == 'true'
      github.ref == 'refs/heads/dev'
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install and build
        run: |
          npm ci
          npm run build
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
          echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${{github.actor}} --password-stdin
          docker build -t ${IMAGE}/mulighetsrommet-flate-${IMAGE_LABEL_DEV}:${IMAGE_TAG} -f .docker/dev/Dockerfile .
          docker push ${IMAGE}/mulighetsrommet-flate-${IMAGE_LABEL_DEV}:${IMAGE_TAG}

  deploy-frontend-dev:
    name: Deploy application to dev
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    needs: build-docker-image-dev
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: frontend/.nais/nais.yaml
          VARS: frontend/.nais/dev-gcp.yaml
          VAR: image_tag=${{env.IMAGE_TAG}},image_label=${{env.IMAGE_LABEL_DEV}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #deploy-labs
  build-docker-image-frontend-labs:
    name: Build Docker image (labs)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    needs: change-check
    if: needs.change-check.outputs.changed-fe == 'true'
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install and build
        run: |
          npm ci
          npm run build:labs
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
          echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${{github.actor}} --password-stdin
          docker build -t ${IMAGE}/mulighetsrommet-flate-${IMAGE_LABEL_LABS}:${IMAGE_TAG} -f .docker/labs/Dockerfile .
          docker push ${IMAGE}/mulighetsrommet-flate-${IMAGE_LABEL_LABS}:${IMAGE_TAG}

  deploy-frontend-labs:
    name: Deploy application to labs
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    needs:
      - build-docker-image-labs
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          RESOURCE: frontend/.nais/nais.yaml
          VARS: frontend/.nais/labs-gcp.yaml
          VAR: image_tag=${{env.IMAGE_TAG}},image_label=${{env.IMAGE_LABEL_LABS}}
