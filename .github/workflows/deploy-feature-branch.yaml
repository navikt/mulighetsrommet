name: Deploy feature branch
on:
  workflow_dispatch:
env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE: docker.pkg.github.com/${{ github.repository }}/mulighetsrommet
  PRINT_PAYLOAD: true

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-cache-${{ hashFiles('**/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-cache
      - run: npm ci
      - run: npm run build
      - run: npm run test

  build-docker-image:
    runs-on: ubuntu-latest
    name: Build and publish Docker image
    needs: build
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-cache-${{ hashFiles('**/frontpackage-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-cache
      - name: Build production artifact
        run: npm run build
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
          docker build -t ${IMAGE}:${IMAGE_TAG} .
          docker push ${IMAGE}:${IMAGE_TAG}

  deploy-dev:
    name: Deploy q1 fss
    needs:
      - build-docker-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais-dev.yaml
          VAR: version=${{ env.IMAGE_TAG }},namespace=pto
