name: Build and deploy mulighetsrommet-api

on:
  push:
    branches:
      - dev
      # TODO: remove
      - feature/deploy-to-production
    paths:
      - build.gradle.kts
      - settings.gradle.kts
      - mulighetsrommet-api/**
  pull_request:
    paths:
      - build.gradle.kts
      - settings.gradle.kts
      - mulighetsrommet-api/**
# TODO: support workflow_dispatch
#  workflow_dispatch:

env:
  IMAGE: ghcr.io/navikt/mulighetsrommet/mulighetsrommet-api:${{ github.sha }}
  CI: true
  TZ: Europe/Amsterdam

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mulighetsrommet-api
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: gradle
      - name: Set up test environment
        run: docker-compose up -d
      - name: Build with Gradle
        run: ./gradlew build --info
      - name: Publish test report
        uses: ScaCap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "**/build/test-results/test/TEST-*.xml"
      - name: Build and push Docker image
        if: github.ref_name == 'dev'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
          echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${{github.actor}} --password-stdin
          docker build -t ${IMAGE} .
          docker push ${IMAGE}

  deploy-dev:
    name: Deploy (dev)
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref_name == 'dev'
    defaults:
      run:
        working-directory: mulighetsrommet-api
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: mulighetsrommet-api/.nais/nais.yaml
          VAR: image=${IMAGE}
