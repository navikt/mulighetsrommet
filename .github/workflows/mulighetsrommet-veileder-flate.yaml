name: CI/CD (mulighetsrommet-veileder-flate)

on:
  push:
    paths:
      - .github/workflows/mulighetsrommet-veileder-flate.yaml
      - package.json
      - package-lock.json
      - turbo.json
      - frontend/**
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment
        required: true
        default: dev
        options:
          - dev
          - dev_and_prod

env:
  IMAGE_DEV: ghcr.io/navikt/mulighetsrommet/mulighetsrommet-veileder-flate-dev:${{ github.sha }}
  IMAGE_PROD: ghcr.io/navikt/mulighetsrommet/mulighetsrommet-veileder-flate-prod:${{ github.sha }}
  CI: true
  TZ: Europe/Amsterdam

jobs:
  build-and-test-preprod:
    name: Build and test for preprod
    runs-on: ubuntu-latest
    env:
      VITE_SANITY_PROJECT_ID: ${{ secrets.SANITY_PROJECT_ID }}
      VITE_SANITY_DATASET: ${{ secrets.SANITY_DATASET }}
      VITE_SANITY_ACCESS_TOKEN: ${{ secrets.SANITY_TEST_DATA_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup frontend
        uses: ./.github/actions/setup-frontend
      - name: Build
        run: npx turbo run build:preprod --filter=mulighetsrommet-veileder-flate
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          working-directory: frontend/mulighetsrommet-veileder-flate
          browser: chrome
          headed: false
          wait-on: http://localhost:3000
          start: npm start
          install: false
      - name: Lag deployment i Sentry
        if: github.event_name == 'push' && github.ref_name == 'main' || github.event_name == 'workflow_dispatch' # Lag deployment hvis merge til main eller manuell trigger
        continue-on-error: true
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: https://sentry.gc.nav.no
          SENTRY_ORG: nav
          SENTRY_PROJECT: mulighetsrommet-veileder-flate
        with:
          environment: dev-gcp
          version: ${{ github.sha }}
          set_commits: skip
          sourcemaps: /home/runner/work/mulighetsrommet/mulighetsrommet/frontend/mulighetsrommet-veileder-flate/dist/assets
      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: C026FHSRFEJ
          status: FAILED
          color: danger
      
  deploy-dev:
    name: Deploy (dev)
    runs-on: ubuntu-latest
    needs: [ build-and-test-preprod ]
    if: github.event_name == 'push' && github.ref_name == 'main' || github.event_name == 'workflow_dispatch'
    steps:
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.DEPLOY_DEV_GCP_BUCKET_FRONTEND }}
    - name: Set up gcloud
      uses: google-github-actions/setup-gcloud@v0
    - name: Upload files to GCS
      run: gsutil -m rsync -r dist gs://mulighetsrommet-veilederflate-dev
    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release/dev@${{ github.sha }}
        release_name: Release to dev
        prerelease: true      

  build-and-test:
    name: Build and test for production
    runs-on: ubuntu-latest
    env:
      VITE_SANITY_PROJECT_ID: ${{ secrets.SANITY_PROJECT_ID }}
      VITE_SANITY_DATASET: ${{ secrets.SANITY_DATASET }}
      VITE_SANITY_ACCESS_TOKEN: ${{ secrets.SANITY_TEST_DATA_AUTH_TOKEN }}
    if: github.event_name == 'push' && github.ref_name == 'main' || github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev_and_prod'
    steps:
      - uses: actions/checkout@v3
      - name: Setup frontend
        uses: ./.github/actions/setup-frontend
      - name: Build
        run: npx turbo run build --filter=mulighetsrommet-veileder-flate
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          working-directory: frontend/mulighetsrommet-veileder-flate
          browser: chrome
          headed: false
          wait-on: http://localhost:3000
          start: npm start
          install: false
      - name: Lag deployment i Sentry
        if: github.event_name == 'push' && github.ref_name == 'main' || github.event_name == 'workflow_dispatch' # Lag deployment hvis merge til main eller manuell trigger
        continue-on-error: true
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: https://sentry.gc.nav.no
          SENTRY_ORG: nav
          SENTRY_PROJECT: mulighetsrommet-veileder-flate
        with:
          environment: prod-gcp
          version: ${{ github.sha }}
          set_commits: skip
          sourcemaps: /home/runner/work/mulighetsrommet/mulighetsrommet/frontend/mulighetsrommet-veileder-flate/dist/assets
      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: C026FHSRFEJ
          status: FAILED
          color: danger
      - name: Build and publish Docker image
        working-directory: frontend/mulighetsrommet-veileder-flate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
          echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${{github.actor}} --password-stdin
          docker build -t ${IMAGE_PROD} .
          docker push ${IMAGE_PROD}

  deploy-prod:
    name: Deploy (prod)
    runs-on: ubuntu-latest
    needs: [ deploy-dev, build-and-test ]
    if: github.event_name == 'push' && github.ref_name == 'main' || github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev_and_prod'
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: frontend/mulighetsrommet-veileder-flate/.nais/nais.yaml
          VAR: image=${{ env.IMAGE_PROD }}
          VARS: frontend/mulighetsrommet-veileder-flate/.nais/prod-gcp.yaml
