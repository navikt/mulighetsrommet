services:
  # Mock implementation of Oauth2/OIDC.
  # The service is referenced as part of the authentication between applications as part of local development.
  mock-oauth2-server:
    image: ghcr.io/navikt/mock-oauth2-server:2.0.0
    restart: always
    ports:
      - "8081:8081"
    profiles:
      - dev
    environment:
      SERVER_PORT: 8081
      JSON_CONFIG: >
        {
          "interactiveLogin": true,
          "httpServer": "NettyWrapper",
          "tokenCallbacks": [
            {
              "issuerId": "azure",
              "tokenExpiry": 15780000,
              "requestMappings": [
                {
                  "requestParam": "scope",
                  "match": "openid somescope",
                  "claims": {
                    "sub": "admin@mulighetsrommet",
                    "aud": ["mulighetsrommet-api"]
                  }
                },
                {
                  "requestParam": "scope",
                  "match": "default",
                  "claims": {
                    "aud": ["mulighetsrommet-api"]
                  }
                },
                {
                  "requestParam": "scope",
                  "match": "mr-tiltakshistorikk",
                  "claims": {
                    "aud": ["mr-tiltakshistorikk"]
                  }
                }
              ]
            },
            {
              "issuerId": "tokenx",
              "tokenExpiry": 15780000,
              "requestMappings": [
                {
                  "requestParam": "scope",
                  "match": "openid somescope",
                  "claims": {
                    "aud": ["mulighetsrommet-api"]
                  }
                }
              ]
            }
          ]
        }

  mulighetsrommet-db:
    image: "postgres:17-alpine"
    restart: "always"
    volumes:
      - "mulighetsrommet-db:/var/lib/postgresql/data"
      - .docker/init-databases.sh:/docker-entrypoint-initdb.d/init-databases.sh
    ports:
      - "5442:5432"
    profiles:
      - dev
      - ci
    command: postgres -c 'max_connections=200'
    environment:
      POSTGRES_USER: "valp"
      POSTGRES_PASSWORD: "valp"

  pdfgen:
    image: "ghcr.io/navikt/pdfgen:2.0.73"
    restart: "always"
    ports:
      - "8888:8080"
    profiles:
      - dev
    environment:
      # Gjør det mulig å benytte mockdata under lokal utvikling
      DISABLE_PDF_GET: false
    volumes:
      - ./mulighetsrommet-pdfgen/templates:/app/templates
      - ./mulighetsrommet-pdfgen/fonts:/app/fonts
      - ./mulighetsrommet-pdfgen/data:/app/data
      - ./mulighetsrommet-pdfgen/resources:/app/resources

  # ZooKeeper is used to track the status of nodes in the Kafka cluster and maintain a list of Kafka topics and messages.
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    restart: always
    ports:
      - "22181:2181"
    profiles:
      - dev
      - ci
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka broker.
  kafka:
    image: confluentinc/cp-kafka:7.5.3
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    profiles:
      - dev
      - ci
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # WireMock is a tool for creating mock APIs.
  wiremock:
    image: wiremock/wiremock:2.32.0
    restart: always
    ports:
      - "8090:8080"
    profiles:
      - dev
    volumes:
      - ./mulighetsrommet-arena-adapter/wiremock/mappings:/home/wiremock/mappings/mulighetsrommet-arena-adapter
      - ./mulighetsrommet-api/wiremock/mappings:/home/wiremock/mappings/mulighetsrommet-api

  texas:
    image: ghcr.io/nais/texas:latest
    ports:
      - "8082:3000"
    environment:
      DOWNSTREAM_APP_NAME: mulighetsrommet-api
      DOWNSTREAM_APP_NAMESPACE: team-mulighetsrommet
      DOWNSTREAM_APP_CLUSTER: local
      BIND_ADDRESS: "0.0.0.0:3000"
      TOKEN_X_ENABLED: true
      TOKEN_X_CLIENT_ID: mulighetsrommet-api
      # this key is useless in production; disregard security notices
      TOKEN_X_PRIVATE_JWK: '{"p":"_LNnIjBshCrFuxtjUC2KKzg_NTVv26UZh5j12_9r5mYTxb8yW047jOYFEGvIdMkTRLGOBig6fLWzgd62lnLainzV35J6K6zr4jQfTldLondlkldMR6nQrp1KfnNUuRbKvzpNKkhl12-f1l91l0tCx3s4blztvWgdzN2xBfvWV68","kty":"RSA","q":"9MIWsbIA3WjiR_Ful5FM8NCgb6JdS2D6ySHVepoNI-iAPilcltF_J2orjfLqAxeztTskPi45wtF_-eV4GIYSzvMo-gFiXLMrvEa7WaWizMi_7Bu9tEk3m_f3IDLN9lwULYoebkDbiXx6GOiuj0VkuKz8ckYFNKLCMP9QRLFff-0","d":"J6UX848X8tNz-09PFvcFDUVqak32GXzoPjnuDjBsxNUvG7LxenLmM_i8tvYl0EW9Ztn4AiCqJUoHw5cX3jz_mSqGl7ciaDedpKm_AetcZwHiEuT1EpSKRPMmOMQSqcJqXrdbbWB8gdUrnTKZIlJCfj7yqgT16ypC43TnwjA0UwxhG5pHaYjKI3pPdoHg2BzA-iubHjVn15Sz7-pnjBmeGDbEFa7ADY-1yPHCmqqvPKTNhoCNW6RpG34Id9hXslPa3X-7pAhJrDBd0_NPlktSA2rUkifYiZURhHR5ijhe0v3uw6kYP8f_foVm_C8O1ExkxXh9Dg8KDZ89dbsSOtBc0Q","e":"AQAB","use":"sig","kid":"l7C_WJgbZ_6e59vPrFETAehX7Dsp7fIyvSV4XhotsGs","qi":"cQFN5q5WhYkzgd1RS0rGqvpX1AkmZMrLv2MW04gSfu0dDwpbsSAu8EUCQW9oA4pr6V7R9CBSu9kdN2iY5SR-hZvEad5nDKPV1F3TMQYv5KpRiS_0XhfV5PcolUJVO_4p3h8d-mo2hh1Sw2fairAKOzvnwJCQ6DFkiY7H1cqwA54","dp":"YTql9AGtvyy158gh7jeXcgmySEbHQzvDFulDr-IXIg8kjHGEbp0rTIs0Z50RA95aC5RFkRjpaBKBfvaySjDm5WIi6GLzntpp6B8l7H6qG1jVO_la4Df2kzjx8LVvY8fhOrKz_hDdHodUeKdCF3RdvWMr00ruLnJhBPJHqoW7cwE","alg":"RS256","dq":"IZA4AngRbEtEtG7kJn6zWVaSmZxfRMXwvgIYvy4-3Qy2AVA0tS3XTPVfMaD8_B2U9CY_CxPVseR-sysHc_12uNBZbycfcOzU84WTjXCMSZ7BysPnGMDtkkLHra-p1L29upz1HVNhh5H9QEswHM98R2LZX2ZAsn4bORLZ1AGqweU","n":"8ZqUp5Cs90XpNn8tJBdUUxdGH4bjqKjFj8lyB3x50RpTuECuwzX1NpVqyFENDiEtMja5fdmJl6SErjnhj6kbhcmfmFibANuG-0WlV5yMysdSbocd75C1JQbiPdpHdXrijmVFMfDnoZTQ-ErNsqqngTNkn5SXBcPenli6Cf9MTSchZuh_qFj_B7Fp3CWKehTiyBcLlNOIjYsXX8WQjZkWKGpQ23AWjZulngWRektLcRWuEKTWaRBtbAr3XAfSmcqTICrebaD3IMWKHDtvzHAt_pt4wnZ06clgeO2Wbc980usnpsF7g8k9p81RcbS4JEZmuuA9NCmOmbyADXwgA9_-Aw"}'
      TOKEN_X_ISSUER: http://host.docker.internal:8081/tokenx
      TOKEN_X_TOKEN_ENDPOINT: http://host.docker.internal:8081/tokenx/token
      TOKEN_X_JWKS_URI: http://host.docker.internal:8081/tokenx/jwks
      TOKEN_X_WELL_KNOWN_URL: http://host.docker.internal:8081/tokenx/.well-known/openid-configuration
      AZURE_ENABLED: true
      AZURE_APP_CLIENT_ID: mulighetsrommet-api
      # this key is useless in production; disregard security notices
      AZURE_APP_JWK: '{"p":"_LNnIjBshCrFuxtjUC2KKzg_NTVv26UZh5j12_9r5mYTxb8yW047jOYFEGvIdMkTRLGOBig6fLWzgd62lnLainzV35J6K6zr4jQfTldLondlkldMR6nQrp1KfnNUuRbKvzpNKkhl12-f1l91l0tCx3s4blztvWgdzN2xBfvWV68","kty":"RSA","q":"9MIWsbIA3WjiR_Ful5FM8NCgb6JdS2D6ySHVepoNI-iAPilcltF_J2orjfLqAxeztTskPi45wtF_-eV4GIYSzvMo-gFiXLMrvEa7WaWizMi_7Bu9tEk3m_f3IDLN9lwULYoebkDbiXx6GOiuj0VkuKz8ckYFNKLCMP9QRLFff-0","d":"J6UX848X8tNz-09PFvcFDUVqak32GXzoPjnuDjBsxNUvG7LxenLmM_i8tvYl0EW9Ztn4AiCqJUoHw5cX3jz_mSqGl7ciaDedpKm_AetcZwHiEuT1EpSKRPMmOMQSqcJqXrdbbWB8gdUrnTKZIlJCfj7yqgT16ypC43TnwjA0UwxhG5pHaYjKI3pPdoHg2BzA-iubHjVn15Sz7-pnjBmeGDbEFa7ADY-1yPHCmqqvPKTNhoCNW6RpG34Id9hXslPa3X-7pAhJrDBd0_NPlktSA2rUkifYiZURhHR5ijhe0v3uw6kYP8f_foVm_C8O1ExkxXh9Dg8KDZ89dbsSOtBc0Q","e":"AQAB","use":"sig","kid":"l7C_WJgbZ_6e59vPrFETAehX7Dsp7fIyvSV4XhotsGs","qi":"cQFN5q5WhYkzgd1RS0rGqvpX1AkmZMrLv2MW04gSfu0dDwpbsSAu8EUCQW9oA4pr6V7R9CBSu9kdN2iY5SR-hZvEad5nDKPV1F3TMQYv5KpRiS_0XhfV5PcolUJVO_4p3h8d-mo2hh1Sw2fairAKOzvnwJCQ6DFkiY7H1cqwA54","dp":"YTql9AGtvyy158gh7jeXcgmySEbHQzvDFulDr-IXIg8kjHGEbp0rTIs0Z50RA95aC5RFkRjpaBKBfvaySjDm5WIi6GLzntpp6B8l7H6qG1jVO_la4Df2kzjx8LVvY8fhOrKz_hDdHodUeKdCF3RdvWMr00ruLnJhBPJHqoW7cwE","alg":"RS256","dq":"IZA4AngRbEtEtG7kJn6zWVaSmZxfRMXwvgIYvy4-3Qy2AVA0tS3XTPVfMaD8_B2U9CY_CxPVseR-sysHc_12uNBZbycfcOzU84WTjXCMSZ7BysPnGMDtkkLHra-p1L29upz1HVNhh5H9QEswHM98R2LZX2ZAsn4bORLZ1AGqweU","n":"8ZqUp5Cs90XpNn8tJBdUUxdGH4bjqKjFj8lyB3x50RpTuECuwzX1NpVqyFENDiEtMja5fdmJl6SErjnhj6kbhcmfmFibANuG-0WlV5yMysdSbocd75C1JQbiPdpHdXrijmVFMfDnoZTQ-ErNsqqngTNkn5SXBcPenli6Cf9MTSchZuh_qFj_B7Fp3CWKehTiyBcLlNOIjYsXX8WQjZkWKGpQ23AWjZulngWRektLcRWuEKTWaRBtbAr3XAfSmcqTICrebaD3IMWKHDtvzHAt_pt4wnZ06clgeO2Wbc980usnpsF7g8k9p81RcbS4JEZmuuA9NCmOmbyADXwgA9_-Aw"}'
      AZURE_OPENID_CONFIG_ISSUER: http://host.docker.internal:8081/azure
      AZURE_OPENID_CONFIG_TOKEN_ENDPOINT: http://host.docker.internal:8081/azure/token
      AZURE_OPENID_CONFIG_JWKS_URI: http://host.docker.internal:8081/azure/jwks
      AZURE_WELL_KNOWN_URL: http://host.docker.internal:8081/azure/.well-known/openid-configuration
    restart: on-failure

volumes:
  mulighetsrommet-db:
