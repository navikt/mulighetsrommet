[versions]
common-java-modules = "3.2025.09.03_08.33-728ff4acbfdb"
flyway = "11.12.0"
koin = "4.1.0-Beta8"
kotest = "6.0.3"
kotest-testcontainers = "2.0.2"
kotlin = "2.2.20"
ktor = "3.3.0"
logback = "1.5.18"
metrics = "4.2.36"
arrow = "2.1.2"
micrometer = "1.15.4"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktlint = "org.jlleitschuh.gradle.ktlint:13.1.0"
shadow = " com.gradleup.shadow:9.0.1"
openapi-generator = "org.openapi.generator:7.15.0"

[bundles]
logging = [
    "slf4j",
    "logback-core",
    "logback-classic",
    "logback-logstashLogbackEncoder",
    "nav-common-log",
]
ktor-openapi = [
    "ktor-openapi",
    "schema-kenerator-core",
    "schema-kenerator-reflection",
    "schema-kenerator-serialization",
    "schema-kenerator-swagger",
]

[libraries]
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-core-serialization = { module = "io.arrow-kt:arrow-core-serialization", version.ref = "arrow" }

ktor-openapi = "io.github.smiley4:ktor-openapi:5.2.0"
schema-kenerator-core = "io.github.smiley4:schema-kenerator-core:2.3.0"
schema-kenerator-reflection = "io.github.smiley4:schema-kenerator-reflection:2.3.0"
schema-kenerator-serialization = "io.github.smiley4:schema-kenerator-serialization:2.3.0"
schema-kenerator-swagger = "io.github.smiley4:schema-kenerator-swagger:2.3.0"

assertj-db = "org.assertj:assertj-db:3.0.0"

caffeine = "com.github.ben-manes.caffeine:caffeine:3.2.2"

dbScheduler = "com.github.kagkarlsson:db-scheduler:16.1.0"

flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-database-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }

google-cloud-postgresSocketFactory = "com.google.cloud.sql:postgres-socket-factory:1.25.3"
google-cloud-storage = "com.google.cloud:google-cloud-storage:2.57.0"

hikaricp = "com.zaxxer:HikariCP:7.0.2"

koin-ktor = { module = "io.insert-koin:koin-ktor3", version.ref = "koin" }
koin-logger-slf4j = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koin" }

kotest-assertions-arrow = "io.kotest.extensions:kotest-assertions-arrow:2.0.0"
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-assertions-table = { module = "io.kotest:kotest-assertions-table", version.ref = "kotest" }
kotest-extensions-testcontainers = { module = "io.kotest.extensions:kotest-extensions-testcontainers", version.ref = "kotest-testcontainers" }
kotest-extensions-testcontainers-kafka = { module = "io.kotest.extensions:kotest-extensions-testcontainers-kafka", version.ref = "kotest-testcontainers" }
kotest-junit = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }

kotlinx-serialization-json = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0"
kotlinx-coroutines-core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2"

kotliquery = "com.github.seratch:kotliquery:1.9.1"

ktlint = "com.pinterest.ktlint:ktlint-cli:1.7.1"

ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }

ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktor" }

ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-authJwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-autoHeadResponse = { module = "io.ktor:ktor-server-auto-head-response", version.ref = "ktor" }
ktor-server-cachingHeaders = { module = "io.ktor:ktor-server-caching-headers", version.ref = "ktor" }
ktor-server-callId = { module = "io.ktor:ktor-server-call-id-jvm", version.ref = "ktor" }
ktor-server-callLogging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-conditionalHeaders = { module = "io.ktor:ktor-server-conditional-headers", version.ref = "ktor" }
ktor-server-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors-jvm", version.ref = "ktor" }
ktor-server-defaultHeaders = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-metricsMicrometer = { module = "io.ktor:ktor-server-metrics-micrometer", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor" }
ktor-server-statusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-swagger = { module = "io.ktor:ktor-server-swagger", version.ref = "ktor" }
ktor-server-testHost = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }

logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-logstashLogbackEncoder = "net.logstash.logback:logstash-logback-encoder:8.1"

metrics-core = { module = "io.dropwizard.metrics:metrics-core", version.ref = "metrics" }
metrics-healthchecks = { module = "io.dropwizard.metrics:metrics-healthchecks", version.ref = "metrics" }

micrometer-core = { module = "io.micrometer:micrometer-core", version.ref = "micrometer" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer" }

mockk = "io.mockk:mockk:1.14.5"

nav-common-log = { module = "no.nav.common:log", version.ref = "common-java-modules" }
nav-common-auditLog = { module = "no.nav.common:audit-log", version.ref = "common-java-modules" }
nav-common-kafka = { module = "no.nav.common:kafka", version.ref = "common-java-modules" }
nav-poaoTilgang-client = "no.nav.poao-tilgang:client:2025.07.04_08.56-814fa50f6740"
nav-mockOauth2Server = "no.nav.security:mock-oauth2-server:2.3.0"

opentelemetry = "io.opentelemetry:opentelemetry-sdk-trace:1.54.0"

postgresql = "org.postgresql:postgresql:42.7.7"

prometheus-caffeine = "io.prometheus:simpleclient_caffeine:0.16.0"

shedlock-jdbc = "net.javacrumbs.shedlock:shedlock-provider-jdbc:6.10.0"

slack-client = "com.slack.api:slack-api-client:1.45.4"

slf4j = "org.slf4j:slf4j-api:2.0.17"

apache-poi = "org.apache.poi:poi:5.4.1"
apache-poi-ooxml = "org.apache.poi:poi-ooxml:5.4.1"

unleash = "io.getunleash:unleash-client-java:11.1.0"
