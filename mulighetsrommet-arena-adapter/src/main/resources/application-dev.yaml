server:
  port: 8084
  host: 0.0.0.0

app:
  database:
    host: ${DB_HOST}
    port: ${DB_PORT}
    name: ${DB_DATABASE}
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    maximumPoolSize: 10
    migrationConfig:
      strategy: Migrate

  services:
    mulighetsrommetApi:
      url: http://mulighetsrommet-api
      scope: api://dev-gcp.team-mulighetsrommet.mulighetsrommet-api/.default
    arenaEventService:
      channelCapacity: 10000
      numChannelConsumers: 100
      maxRetries: 5
    arenaOrdsProxy:
      url: https://amt-arena-ords-proxy.dev-fss-pub.nais.io/api
      scope: api://dev-fss.amt.amt-arena-ords-proxy/.default

  tasks:
    retryFailedEvents:
      delayOfMinutes: 5

    notifyFailedEvents:
      maxRetries: 5
      cron: '0 0 7 * * MON-FRI'

  enableFailedRecordProcessor: true

  auth:
    azure:
      issuer: ${AZURE_OPENID_CONFIG_ISSUER}
      jwksUri: ${AZURE_OPENID_CONFIG_JWKS_URI}
      audience: ${AZURE_APP_CLIENT_ID}
      tokenEndpointUrl: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}

  kafka:
    consumerGroupId: mulighetsrommet-kafka-consumer.v1
    consumers:
      arenaTiltakEndret:
        id: arena-tiltakstype-endret
        topic: teamarenanais.aapen-arena-tiltakendret-v1-q2
      arenaTiltakgjennomforingEndret:
        id: arena-tiltakgjennomforing-endret
        topic: teamarenanais.aapen-arena-tiltakgjennomforingendret-v1-q2
      arenaTiltakdeltakerEndret:
        id: arena-tiltakdeltaker-endret
        topic: teamarenanais.aapen-arena-tiltakdeltakerendret-v1-q2
      arenaSakEndret:
        id: arena-sakendret-endret
        topic: teamarenanais.aapen-arena-sakendret-v1-q2
      arenaAvtaleInfoEndret:
        id: arena-avtaleinfo-endret
        topic: teamarenanais.aapen-arena-avtaleinfoendret-v1-q2

  slack:
    token: ${SLACK_TOKEN}
    channel: "#team-valp-monitoring"
    enable: true
