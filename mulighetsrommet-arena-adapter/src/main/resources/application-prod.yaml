server:
  port: 8084
  host: 0.0.0.0

app:
  database:
    host: ${DB_HOST}
    port: ${DB_PORT}
    name: ${DB_DATABASE}
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    maximumPoolSize: 10
    migrationConfig:
      strategy: MigrateAsync

  services:
    mulighetsrommetApi:
      url: http://mulighetsrommet-api
      scope: api://prod-gcp.team-mulighetsrommet.mulighetsrommet-api/.default
    arenaEventService:
      channelCapacity: 500
      numChannelConsumers: 50
      maxRetries: 5
    arenaOrdsProxy:
      url: https://amt-arena-ords-proxy.prod-fss-pub.nais.io/api
      scope: api://prod-fss.amt.amt-arena-ords-proxy/.default

  tasks:
    retryFailedEvents:
      delayOfMinutes: 15

  enableFailedRecordProcessor: true

  auth:
    azure:
      issuer: ${AZURE_OPENID_CONFIG_ISSUER}
      jwksUri: ${AZURE_OPENID_CONFIG_JWKS_URI}
      audience: ${AZURE_APP_CLIENT_ID}
      tokenEndpointUrl: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}

  kafka:
    brokers: ${KAFKA_BROKERS}
    consumerGroupId: mulighetsrommet-kafka-consumer.v1
    topics:
      topicStatePollDelay: 10000
      consumer:
        tiltakendret: teamarenanais.aapen-arena-tiltakendret-v1-p
        tiltakgjennomforingendret: teamarenanais.aapen-arena-tiltakgjennomforingendret-v1-p
        tiltakdeltakerendret: teamarenanais.aapen-arena-tiltakdeltakerendret-v1-p
        sakendret: teamarenanais.aapen-arena-tiltakssakendret-v1-p
